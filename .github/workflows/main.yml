name: GraalVM Demos
on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 1 * *" # run every month
  # Enable manual dispatch of the workflow
  # see https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
  workflow_dispatch:
jobs:
  espresso-jshell:
    name: Run 'espresso-jshell' demo
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'espresso,native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'espresso-jshell' demo
        run: |
          cd espresso-jshell
          ./build-espresso-jshell.sh
          echo "Math.PI" | ./espresso-jshell
  functionGraphDemo:
    name: Run 'functionGraphDemo' demo
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'nodejs,R,ruby'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'functionGraphDemo' demo
        run: |
          cd functionGraphDemo
          npm install
          $GRAALVM_HOME/bin/node --version
          $GRAALVM_HOME/bin/node --jvm --polyglot server.js &
          sleep 60
          curl http://localhost:8088/
  graalpython-notebook-example:
    name: Run 'graalpython-notebook-example' demo
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'python'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'graalpython-notebook-example' demo
        run: |
          cd graalpython-notebook-example
          mvn --no-transfer-progress compile
          ./install-deps.sh
          # mvn exec:java (skip running the example)
  hello-graal:
    name: Run 'hello-graal' demo
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'hello-graal' demo
        run: |
          cd hello-graal
          javac -d build src/com/hello/Graal.java
          java -cp ./build com.hello.Graal
          jar cfvm Hello.jar manifest.txt -C build .
          jar tf Hello.jar
          native-image -jar Hello.jar
          ./Hello
  java-kotlin-aot:
    name: Run 'java-kotlin-aot' demo
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'java-kotlin-aot' demo
        run: |
          cd java-kotlin-aot
          ./build.sh
          ./run.sh
  java-simple-stream-benchmark:
    name: Run 'java-simple-stream-benchmark' demo
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'java-simple-stream-benchmark' demo
        run: |
          cd java-simple-stream-benchmark
          ./build.sh
          ./run.sh
  javagdbnative:
    name: Run 'javagdbnative' demo
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'javagdbnative' demo
        run: |
          cd javagdbnative
          mvn -Pnative -DskipTests --no-transfer-progress package
          ./target/javagdb
  js-java-async-helidon:
    name: Run 'js-java-async-helidon' demo
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'js-java-async-helidon' demo
        run: |
          cd js-java-async-helidon
          mvn --no-transfer-progress clean package
          $GRAALVM_HOME/bin/java -jar target/polyglotHelidonService-SNAPSHOT-jar-with-dependencies.jar &
          sleep 10
          curl http://localhost:8080/greet?request=41
          curl http://localhost:8080/greet?request=foo
  multithreading-demo:
    name: Run 'multithreading-demo' demo
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'multithreading-demo-oversized' demo
        run: |
          cd multithreading-demo/multithreading-demo-oversized
          mvn --no-transfer-progress package
          java -jar target/multithreading-1.0-jar-with-dependencies.jar
          ./target/multithreading-image-oversized
      - name: Run 'multithreading-demo-improved' demo
        run: |
          cd multithreading-demo/multithreading-demo-improved
          mvn --no-transfer-progress package
          java -jar target/multithreading-1.0-jar-with-dependencies.jar
          ./target/multithreading-image-improved
  fortune-demo:
    name: Run 'fortune-demo' demo
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'fortune' demo
        run: |
          cd fortune-demo/fortune
          mvn --no-transfer-progress package
          java -jar target/fortune-1.0-jar-with-dependencies.jar
          ./target/fortune
      - name: Run 'staticfortune' demo
        run: |
          cd fortune-demo/staticfortune
          mvn --no-transfer-progress package
          java -jar target/staticfortune-1.0-jar-with-dependencies.jar
          ./target/staticfortune
  native-hello-module:
    name: Run 'native-hello-module' demo
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'native-hello-module' demo
        run: |
          cd native-hello-module
          mvn --no-transfer-progress package
          native-image --module-path target/HelloModule-1.0-SNAPSHOT.jar --module HelloModule
          ./hellomodule
  native-image-configure-examples:
    name: Run 'native-image-configure-examples' demo
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'configure-at-runtime-example' demo
        run: |
          cd native-image-configure-examples/configure-at-runtime-example
          mvn --no-transfer-progress package
          ./target/example
      - name: Run 'configure-at-buildtime-example' demo
        run: |
          cd native-image-configure-examples/configure-at-buildtime-example
          mvn --no-transfer-progress package
          ./target/example
  native-list-dir:
    name: Run 'native-list-dir' demo
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'native-image,js'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'native-list-dir' demo
        run: |
          cd native-list-dir
          ./build.sh
          ./run.sh
  native-netty-plot:
    name: Run 'native-netty-plot' demo
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'native-netty-plot' demo
        run: |
          cd native-netty-plot
          mvn --no-transfer-progress package
          java -agentlib:native-image-agent=config-output-dir=src/main/resources/META-INF/native-image -jar target/netty-plot-0.1-jar-with-dependencies.jar &
          pid=$!
          sleep 10
          kill $pid
          native-image -jar target/netty-plot-0.1-jar-with-dependencies.jar
          du -h netty-plot
          ./netty-plot &
          sleep 10
          curl http://localhost:8080/
  polyglot-chat-app:
    name: Run 'polyglot-chat-app' demo
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'python,R'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'polyglot-chat-app' demo
        run: |
          cd polyglot-chat-app
          ./gradlew build # pre-build application
          ./gradlew run &
          sleep 10
          curl http://localhost:8080/
  polyglot-debug:
    name: Run 'polyglot-debug' demo
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'js'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'polyglot-debug' demo
        run: |
          cd polyglot-debug
          mvn --no-transfer-progress clean package
          java -cp ./target/PolyglotDebug-1.0-SNAPSHOT.jar org.graalvm.demos.PolyglotDebug
  polyglot-javascript-java-r:
    name: Run 'polyglot-javascript-java-r' demo
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '11'
          components: 'nodejs,R'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'polyglot-javascript-java-r' demo
        run: |
          cd polyglot-javascript-java-r
          npm install
          $GRAALVM_HOME/bin/node --jvm --polyglot server.js &
          sleep 10
          curl http://localhost:3000/
  spring-r:
    name: Run 'spring-r' demo
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.1.0'
          java-version: '11'
          components: 'R'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'spring-r' demo
        run: |
          cd spring-r
          mvn --no-transfer-progress spring-boot:run -Dgraalvm.version=22.1.0 &
          sleep 60
          curl http://localhost:8080/load
  streams:
    name: Run 'streams' demo
    if: github.event_name != 'pull_request'
    env:
      HAS_GDS_TOKEN: ${{ secrets.GDS_TOKEN != '' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest' # EE dev builds not supported
          gds-token: ${{ secrets.GDS_TOKEN }}
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'streams' demo
        if: env.HAS_GDS_TOKEN == 'true'
        run: |
          cd streams
          ./run.sh
  spring-native-image:
    name: Run 'spring-native-graal' demo
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run 'spring-native-image' demo
        run: |
          cd spring-native-image
          mvn --no-transfer-progress package
          mvn --no-transfer-progress package -Dnative
          ./target/jibber &
          sleep 5
          curl http://localhost:8080/jibber
